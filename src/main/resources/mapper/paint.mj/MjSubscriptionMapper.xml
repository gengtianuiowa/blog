<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qta.be.dao.mapper.paint.mj.MjSubscriptionMapper">

    <resultMap type="com.qta.be.dao.domain.paint.mj.MjSubscription" id="MjSubscriptionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userid" column="userId" jdbcType="INTEGER"/>
        <result property="subscription" column="subscription" jdbcType="VARCHAR"/>
        <result property="paintLimit" column="paintLimit" jdbcType="INTEGER"/>
        <result property="expiration" column="expiration" jdbcType="TIMESTAMP"/>
        <result property="addTime" column="addTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="MjSubscriptionMap">
        select id,
               userId,
               subscription,
               expiration,
               paintLimit,
               addTime,
               updateTime
        from mj_subscription
        where id =
              #{id}
    </select>
    <!--查询单个-->
    <select id="queryByUserId" resultType="com.qta.be.dao.domain.paint.mj.MjSubscription">
        select *
        from mj_subscription
        where userId =
              #{id}
    </select>
    <select id="queryValidByUserId" resultType="com.qta.be.dao.domain.paint.mj.MjSubscription">
        select *
        from mj_subscription
        where userId =
              #{id}
          AND expiration >= now()
    </select>
    <select id="queryAllValidSubs" resultType="com.qta.be.dao.domain.paint.mj.MjSubscription">
        select *
        from mj_subscription
        where expiration >= now()
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="MjSubscriptionMap">
        select
        id, userId, subscription, paintLimit, addTime, updateTime
        from mj_subscription
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="subscription != null and subscription != ''">
                and subscription = #{subscription}
            </if>
            <if test="paintLimit != null">
                and paintLimit = #{paintLimit}
            </if>
            <if test="expiration != null">
                and expiration = #{expiration}
            </if>
            <if test="addTime != null">
                and addTime = #{addTime}
            </if>
            <if test="updateTime != null">
                and updateTime = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from mj_subscription
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="subscription != null and subscription != ''">
                and subscription = #{subscription}
            </if>
            <if test="paintLimit != null">
                and paintLimit = #{paintLimit}
            </if>
            <if test="expiration != null">
                and expiration = #{expiration}
            </if>
            <if test="addTime != null">
                and addTime = #{addTime}
            </if>
            <if test="updateTime != null">
                and updateTime = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into mj_subscription(userId, subscription, paintLimit, expiration, addTime, updateTime)
        values (#{userid}, #{subscription}, #{paintLimit}, #{expiration}, #{addTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into mj_subscription(userId, subscription, paintLimit, expiration, addTime, updateTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.subscription}, #{entity.paintLimit}, #{entity.expiration}, #{entity.addTime},
            #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into mj_subscription(userId, subscription, paintLimit, expiration, addTime, updateTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.subscription}, #{entity.paintLimit}, #{entity.expiration}, #{entity.addTime},
            #{entity.updateTime})
        </foreach>
        on duplicate key update
        userId = values(userId),
        subscription = values(subscription),
        paintLimit = values(paintLimit),
        addTime = values(addTime),
        updateTime = values(updateTime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mj_subscription
        <set>
            <if test="userid != null">
                userId = #{userid},
            </if>
            <if test="subscription != null and subscription != ''">
                subscription = #{subscription},
            </if>
            <if test="paintLimit != null">
                paintLimit = #{paintLimit},
            </if>
            <if test="addTime != null">
                addTime = #{addTime},
            </if>
            <if test="addTime != null">
                addTime = #{addTime},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
            expiration = #{expiration}
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from mj_subscription
        where id = #{id}
    </delete>

</mapper>

